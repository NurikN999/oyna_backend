{
    "openapi": "3.0.0",
    "info": {
        "title": "Oyna API Documentation",
        "version": "0.1"
    },
    "paths": {
        "/api/advertisings": {
            "get": {
                "tags": [
                    "Advertisings"
                ],
                "summary": "Get list of advertisings",
                "description": "Get list of advertisings",
                "operationId": "getAllAdvertisings",
                "responses": {
                    "200": {
                        "description": "List of advertisings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AdvertisingResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Advertisings"
                ],
                "summary": "Create advertising",
                "description": "Create advertising",
                "operationId": "storeAdvertising",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreAdvertisingRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Advertising created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/AdvertisingResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/advertisings/{advertising}": {
            "get": {
                "tags": [
                    "Advertisings"
                ],
                "summary": "Get advertising by id",
                "description": "Get advertising by id",
                "operationId": "showAdvertising",
                "parameters": [
                    {
                        "name": "advertising",
                        "in": "path",
                        "description": "Advertising id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Advertising retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AdvertisingResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Advertisings"
                ],
                "summary": "Update advertising",
                "description": "Update advertising",
                "operationId": "deleteAdvertising",
                "parameters": [
                    {
                        "name": "advertising",
                        "in": "path",
                        "description": "Advertising id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreAdvertisingRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Advertising updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Advertisings"
                ],
                "summary": "Update advertising",
                "description": "Update advertising",
                "operationId": "updateAdvertising",
                "parameters": [
                    {
                        "name": "advertising",
                        "in": "path",
                        "description": "Advertising id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreAdvertisingRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Advertising updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/cities": {
            "get": {
                "tags": [
                    "City"
                ],
                "summary": "Get all cities",
                "operationId": "185d0aefb5fd6e9d4e5f1263e2734df4",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CityResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/cities/{city}": {
            "get": {
                "tags": [
                    "City"
                ],
                "summary": "Get city by id",
                "operationId": "30ae4a727d6f249244811a32f60aa319",
                "parameters": [
                    {
                        "name": "city",
                        "in": "path",
                        "description": "City id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CityResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/entertainments": {
            "get": {
                "tags": [
                    "Entertainments"
                ],
                "summary": "Get all entertainments",
                "description": "Get all entertainments",
                "operationId": "index",
                "responses": {
                    "200": {
                        "description": "Entertainments retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EntertainmentResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Entertainments"
                ],
                "summary": "Store a newly created entertainment",
                "description": "Store a newly created entertainment",
                "operationId": "store",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "image",
                                    "city_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Entertainment name"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Entertainment description"
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "city_id": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Entertainment created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Entertainment created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/EntertainmentResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entertainments/{entertainment}": {
            "get": {
                "tags": [
                    "Entertainments"
                ],
                "summary": "Get entertainment by id",
                "description": "Get entertainment by id",
                "operationId": "show",
                "parameters": [
                    {
                        "name": "entertainment",
                        "in": "path",
                        "description": "Entertainment id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Entertainment retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/EntertainmentResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Entertainment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Entertainment not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Entertainments"
                ],
                "summary": "Delete entertainment by id",
                "description": "Delete entertainment by id",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "entertainment",
                        "in": "path",
                        "description": "Entertainment id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Entertainment deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Entertainment deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Entertainment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Entertainment not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Entertainments"
                ],
                "summary": "Update entertainment by id",
                "description": "Update entertainment by id",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "entertainment",
                        "in": "path",
                        "description": "Entertainment id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "image",
                                    "city_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Entertainment name"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Entertainment description"
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "city_id": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Entertainment updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Entertainment updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/EntertainmentResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Entertainment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Entertainment not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/hospitality-venues": {
            "get": {
                "tags": [
                    "Hospitality Venues"
                ],
                "summary": "Get all hospitality venues",
                "description": "Get all hospitality venues",
                "operationId": "getHospitalityVenues",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/HospitalityVenueResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Hospitality Venues"
                ],
                "summary": "Create a new hospitality venue",
                "description": "Create a new hospitality venue",
                "operationId": "storeHospitalityAndVenue",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreHospitalityVenueRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Venue created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/HospitalityVenueResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/hospitality-venues/{hospitalityVenueId}": {
            "get": {
                "tags": [
                    "Hospitality Venues"
                ],
                "summary": "Get a hospitality venue",
                "description": "Get a hospitality venue",
                "operationId": "showHospitalityAndVenue",
                "parameters": [
                    {
                        "name": "hospitalityVenue",
                        "in": "path",
                        "description": "ID of the hospitality venue",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/HospitalityVenueResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Hospitality Venues"
                ],
                "summary": "Update a hospitality venue",
                "description": "Update a hospitality venue",
                "operationId": "updateHospitalityAndVenue",
                "parameters": [
                    {
                        "name": "hospitalityVenue",
                        "in": "path",
                        "description": "ID of the hospitality venue",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateHospitalityVenue"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Venue updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/HospitalityVenueResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Hospitality Venues"
                ],
                "summary": "Delete a hospitality venue",
                "description": "Delete a hospitality venue",
                "operationId": "deleteHospitalityAndVenue",
                "parameters": [
                    {
                        "name": "hospitalityVenue",
                        "in": "path",
                        "description": "ID of the hospitality venue",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Venue deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/hospitality-venues/types": {
            "get": {
                "tags": [
                    "Hospitality Venues"
                ],
                "summary": "Get all hospitality venue types",
                "description": "Get all hospitality venue types",
                "operationId": "getHospitalityVenueTypes",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": "1"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Hotel"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/musics": {
            "get": {
                "tags": [
                    "Music"
                ],
                "summary": "Get all music",
                "description": "Get all music",
                "operationId": "getMusic",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MusicResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Music"
                ],
                "summary": "Create a new music",
                "description": "Create a new music and return the music data",
                "operationId": "storeMusic",
                "requestBody": {
                    "description": "Data for creating a new music",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreMusicRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Music created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Music created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/MusicResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/musics/{id}": {
            "get": {
                "tags": [
                    "Music"
                ],
                "summary": "Get a specific music",
                "description": "Get a specific music by its id",
                "operationId": "getMusicById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the music to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MusicResource"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Music"
                ],
                "summary": "Update a specific music",
                "description": "Update a specific music by its id",
                "operationId": "updateMusic",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the music to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Data for updating a music",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateMusicRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Music updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MusicResource"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/music/{id}": {
            "delete": {
                "tags": [
                    "Music"
                ],
                "summary": "Delete a specific music",
                "description": "Delete a specific music by its id",
                "operationId": "deleteMusic",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the music to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Music deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Music deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/music/genres": {
            "get": {
                "tags": [
                    "Music"
                ],
                "summary": "Get all music genres",
                "description": "Get all music genres",
                "operationId": "getMusicGenres",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MusicGenreType"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/offers": {
            "get": {
                "tags": [
                    "Offers"
                ],
                "summary": "Get offers",
                "description": "Get offers",
                "operationId": "showAllOffers",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/OfferResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Offers"
                ],
                "summary": "Create a new offer",
                "description": "Create a new offer and return the offer data",
                "operationId": "storeOffer",
                "requestBody": {
                    "description": "Data for creating a new offer",
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Offer created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OfferResource"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/offers/{id}": {
            "get": {
                "tags": [
                    "Offers"
                ],
                "summary": "Get a specific offer",
                "description": "Get a specific offer by its id",
                "operationId": "getOfferById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the offer to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OfferResource"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Offers"
                ],
                "summary": "Update a specific offer",
                "description": "Update a specific offer by its id",
                "operationId": "updateOffer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the offer to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Data for updating an offer",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Offer updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OfferResource"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Offers"
                ],
                "summary": "Delete a specific offer",
                "description": "Delete a specific offer by its id",
                "operationId": "deleteOffer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the offer to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Offer deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Offer deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/partners": {
            "get": {
                "tags": [
                    "Partners"
                ],
                "summary": "Get all partners",
                "description": "Get all partners",
                "operationId": "getPartners",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PartnersResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Partners"
                ],
                "summary": "Create a new partner",
                "description": "Create a new partner and return the partner data",
                "operationId": "storePartner",
                "requestBody": {
                    "description": "Data for creating a new partner",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StorePartnerRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Partner created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PartnersResource"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/partners/{id}": {
            "get": {
                "tags": [
                    "Partners"
                ],
                "summary": "Get a specific partner",
                "description": "Get a specific partner by its id",
                "operationId": "getPartnerById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the partner to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PartnersResource"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Partners"
                ],
                "summary": "Update a specific partner",
                "description": "Update a specific partner by its id",
                "operationId": "updatePartner",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the partner to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Data for updating a partner",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePartnerRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Partner updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PartnersResource"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Partners"
                ],
                "summary": "Delete a specific partner",
                "description": "Delete a specific partner by its id",
                "operationId": "deletePartner",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the partner to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Partner deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Partner deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/prizes": {
            "get": {
                "tags": [
                    "Prizes"
                ],
                "summary": "Get all prizes",
                "description": "Get all prizes",
                "operationId": "getPrizes",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PrizeResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Prizes"
                ],
                "summary": "Create a new prize",
                "description": "Create a new prize and return the prize data",
                "operationId": "storePrize",
                "requestBody": {
                    "description": "Data for creating a new prize",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StorePrizeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Prize created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PrizeResource"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/prizes/{id}": {
            "get": {
                "tags": [
                    "Prizes"
                ],
                "summary": "Get a specific prize",
                "description": "Get a specific prize by its id",
                "operationId": "getPrizeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the prize to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PrizeResource"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Prizes"
                ],
                "summary": "Update a specific prize",
                "description": "Update a specific prize by its id",
                "operationId": "updatePrize",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the prize to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Data for updating a prize",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePrizeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Prize updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PrizeResource"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Prizes"
                ],
                "summary": "Delete a specific prize",
                "description": "Delete a specific prize by its id",
                "operationId": "deletePrize",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the prize to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Prize deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Prize deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "MusicGenreType": {
                "description": "The genre of the music",
                "type": "string",
                "enum": [
                    "pop",
                    "rock",
                    "jazz",
                    "classic",
                    "hip_hop",
                    "electronic"
                ]
            },
            "StoreAdvertisingRequest": {
                "required": [
                    "title",
                    "placement_area",
                    "play_time",
                    "description",
                    "video"
                ],
                "properties": {
                    "title": {
                        "type": "string",
                        "example": "Advertising title"
                    },
                    "placement_area": {
                        "type": "string",
                        "example": "Advertising placement area"
                    },
                    "play_time": {
                        "type": "string",
                        "format": "date",
                        "example": "2021-10-10"
                    },
                    "description": {
                        "type": "string",
                        "example": "Advertising description"
                    },
                    "video": {
                        "type": "string",
                        "format": "binary"
                    },
                    "video_link": {
                        "type": "string",
                        "example": "http://example.com/video.mp4"
                    }
                },
                "type": "object"
            },
            "UpdateAdvertisingRequest": {
                "title": "UpdateAdvertisingRequest",
                "description": "Update advertising request",
                "required": [
                    "title",
                    "placement_area",
                    "play_time",
                    "description",
                    "video",
                    "video_link"
                ]
            },
            "StoreHospitalityVenueRequest": {
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "city_id": {
                        "type": "integer"
                    },
                    "image": {
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "UpdateHospitalityVenue": {
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "city_id": {
                        "type": "integer"
                    },
                    "image": {
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "StoreMusicRequest": {
                "properties": {
                    "title": {
                        "description": "The title of the music",
                        "type": "string"
                    },
                    "genre": {
                        "description": "The genre of the music",
                        "type": "string",
                        "enum": [
                            "pop",
                            "rock",
                            "jazz",
                            "classical",
                            "country"
                        ]
                    },
                    "image": {
                        "description": "The image of the music",
                        "type": "string",
                        "format": "binary"
                    },
                    "file": {
                        "description": "The file of the music",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "UpdateMusicRequest": {
                "properties": {
                    "title": {
                        "description": "The title of the music",
                        "type": "string"
                    },
                    "genre": {
                        "description": "The genre of the music",
                        "type": "string",
                        "enum": [
                            "pop",
                            "rock",
                            "jazz",
                            "classical",
                            "country"
                        ]
                    },
                    "image": {
                        "description": "The image of the music",
                        "type": "string",
                        "format": "binary"
                    },
                    "file": {
                        "description": "The file of the music",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "StorePartnerRequest": {
                "properties": {
                    "title": {
                        "description": "The title of the partner",
                        "type": "string"
                    },
                    "description": {
                        "description": "The description of the partner",
                        "type": "string"
                    },
                    "image": {
                        "description": "The image of the partner",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "UpdatePartnerRequest": {
                "properties": {
                    "title": {
                        "description": "The title of the partner",
                        "type": "string"
                    },
                    "description": {
                        "description": "The description of the partner",
                        "type": "string"
                    },
                    "image": {
                        "description": "The image of the partner",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "StorePrizeRequest": {
                "properties": {
                    "title": {
                        "description": "The title of the prize",
                        "type": "string"
                    },
                    "description": {
                        "description": "The description of the prize",
                        "type": "string"
                    },
                    "image": {
                        "description": "The image of the prize",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "UpdatePrizeRequest": {
                "properties": {
                    "title": {
                        "description": "The title of the prize",
                        "type": "string"
                    },
                    "description": {
                        "description": "The description of the prize",
                        "type": "string"
                    },
                    "image": {
                        "description": "The image of the prize",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "AdvertisingResource": {
                "title": "AdvertisingResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "title": {
                        "type": "string",
                        "example": "Advertising title"
                    },
                    "placement_area": {
                        "type": "string",
                        "example": "Placement area"
                    },
                    "play_time": {
                        "type": "integer",
                        "example": "30"
                    },
                    "description": {
                        "type": "string",
                        "example": "Advertising description"
                    },
                    "video_path": {
                        "type": "string",
                        "example": "http://oynapp.kz/storage/videos/1.mp4"
                    }
                },
                "type": "object"
            },
            "CityResource": {
                "title": "CityResource",
                "description": "City resource",
                "properties": {
                    "id": {
                        "description": "City id",
                        "type": "integer"
                    },
                    "name": {
                        "description": "City name",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CityResourceCollection": {
                "title": "CityResourceCollection",
                "description": "City resource collection",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CityResource"
                        }
                    }
                },
                "type": "object"
            },
            "EntertainmentResource": {
                "required": [
                    "id",
                    "type",
                    "title",
                    "address",
                    "description",
                    "city_id",
                    "image"
                ],
                "properties": {
                    "id": {
                        "description": "Transform the resource into an array.",
                        "type": "integer",
                        "example": "1"
                    },
                    "type": {
                        "type": "string",
                        "example": "Entertainment"
                    },
                    "title": {
                        "type": "string",
                        "example": "Entertainment title"
                    },
                    "address": {
                        "type": "string",
                        "example": "Entertainment address"
                    },
                    "description": {
                        "type": "string",
                        "example": "Entertainment description"
                    },
                    "city_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "image": {
                        "$ref": "#/components/schemas/ImageResource"
                    }
                },
                "type": "object"
            },
            "HospitalityVenueResource": {
                "required": [
                    "id",
                    "title",
                    "type",
                    "address",
                    "description",
                    "city",
                    "image"
                ],
                "properties": {
                    "id": {
                        "description": "Transform the resource into an array.",
                        "type": "integer",
                        "example": "1"
                    },
                    "title": {
                        "type": "string",
                        "example": "Hospitality Venue title"
                    },
                    "type": {
                        "type": "string",
                        "example": "Hospitality Venue type"
                    },
                    "address": {
                        "type": "string",
                        "example": "Hospitality Venue address"
                    },
                    "description": {
                        "type": "string",
                        "example": "Hospitality Venue description"
                    },
                    "city": {
                        "$ref": "#/components/schemas/CityResource"
                    },
                    "image": {
                        "$ref": "#/components/schemas/ImageResource"
                    }
                },
                "type": "object"
            },
            "ImageResource": {
                "required": [
                    "id",
                    "path",
                    "imageable_type",
                    "imageable_id"
                ],
                "properties": {
                    "id": {
                        "description": "Transform the resource into an array.",
                        "type": "integer",
                        "example": "1"
                    },
                    "path": {
                        "type": "string",
                        "example": "images/1.jpg"
                    },
                    "imageable_type": {
                        "type": "string",
                        "example": "App\\Models\\Entertainment"
                    },
                    "imageable_id": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "MusicResource": {
                "properties": {
                    "id": {
                        "description": "The ID of the music",
                        "type": "integer"
                    },
                    "title": {
                        "description": "The title of the music",
                        "type": "string"
                    },
                    "genre": {
                        "description": "The genre of the music",
                        "type": "string"
                    },
                    "path": {
                        "description": "The URL of the music file",
                        "type": "string"
                    },
                    "image": {
                        "description": "The image of the music",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "OfferResource": {
                "properties": {
                    "id": {
                        "description": "The ID of the offer",
                        "type": "integer"
                    },
                    "text": {
                        "description": "The text of the offer",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PartnersResource": {
                "properties": {
                    "id": {
                        "description": "The ID of the partner",
                        "type": "integer"
                    },
                    "title": {
                        "description": "The title of the partner",
                        "type": "string"
                    },
                    "description": {
                        "description": "The description of the partner",
                        "type": "string"
                    },
                    "image": {
                        "$ref": "#/components/schemas/ImageResource"
                    }
                },
                "type": "object"
            },
            "PrizeResource": {
                "properties": {
                    "id": {
                        "description": "The ID of the prize",
                        "type": "integer"
                    },
                    "title": {
                        "description": "The title of the prize",
                        "type": "string"
                    },
                    "description": {
                        "description": "The description of the prize",
                        "type": "string"
                    },
                    "image": {
                        "$ref": "#/components/schemas/ImageResource"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    }
}